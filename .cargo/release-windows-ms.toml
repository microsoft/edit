# Avoid linking with vcruntime140.dll by statically linking everything,
# and then explicitly linking with ucrtbase.dll dynamically.
# We do this, because vcruntime140.dll is an optional Windows component.
[target.'cfg(target_os = "windows")']
rustflags = [
    "-Ctarget-feature=+crt-static",
    "-Clink-args=/DEFAULTLIB:ucrt.lib",
    "-Clink-args=/NODEFAULTLIB:vcruntime.lib",
    "-Clink-args=/NODEFAULTLIB:msvcrt.lib",
    "-Clink-args=/NODEFAULTLIB:libucrt.lib",
]

# The backtrace code for panics in Rust is almost as large as the entire editor.
# = Huge reduction in binary size by removing all that.
[unstable]
build-std = ["std", "panic_abort"]
build-std-features = ["panic_immediate_abort"]

# ^^^ The parts above are identical to release-windows.toml ^^^
#
# The following lines are specific to official Windows, as the use of
# internal registries, security features, etc., are all mandatory.

# Enable shadow stacks: https://learn.microsoft.com/en-us/cpp/build/reference/cetcompat
[target.'cfg(all(target_os = "windows", any(target_arch = "x86", target_arch = "x86_64")))']
rustflags = ["-Clink-args=/DYNAMICBASE", "-Clink-args=/CETCOMPAT"]

[registries.Edit_PublicPackages]
index = "sparse+https://pkgs.dev.azure.com/microsoft/Dart/_packaging/Edit_PublicPackages/Cargo/index/"

[source.crates-io]
replace-with = "Edit_PublicPackages"
