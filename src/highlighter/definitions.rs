// This file is auto-generated by the highlighter-gen tool.
// Do not edit this file directly.

use std::ops::RangeInclusive;

pub struct Language {
    pub name: &'static str,
    pub extensions: &'static [&'static str],
    pub states: &'static [&'static [Transition<'static>]],
}

pub type Transition<'a> = (Consume<'a>, HighlightKind, Action);

pub enum Consume<'a> {
    Chars(usize),
    Prefix(&'a str),
    PrefixInsensitive(&'a str),
    Charset(&'a [u8; 256]),
}

#[derive(Debug, Default, Clone, Copy, PartialEq, Eq)]
pub enum HighlightKind {
    #[default]
    Other,
    Comment,
    Number,
    String,
    Variable,
    Operator,
    Keyword,
    Method,
}

pub enum Action {
    Change(u8),
    Push(u8),
    Pop,
}

/**
---
config:
  layout: elk
---
flowchart TD
    0["ground"]
    1["comment"]
    2["string"]
    3["string_escape"]
    0 -->|"Prefix(//)"| 4
    0 -->|"Prefix(/*)"| push1[/"comment"/]
    0 -->|"Prefix(&quot;)"| push2[/"string"/]
    0 -->|"Prefix(-)"| 6
    0 -->|"Charset([0-9])"| 5
    0 -->|"Prefix(true, false, null)"| pop0@{ shape: stop }
    4 -->|"Chars(Line)"| pop262144@{ shape: stop }
    6 -->|"Charset([0-9])"| 5
    6 -->|"Chars(0)"| pop393216@{ shape: stop }
    5 -->|"Prefix(.)"| 8
    5 -->|"Chars(0)"| 7
    8 -->|"Charset([0-9])"| 7
    8 -->|"Chars(0)"| pop524288@{ shape: stop }
    7 -->|"PrefixInsensitive(e)"| 9
    7 -->|"Chars(0)"| pop458752@{ shape: stop }
    9 -->|"Prefix(+, -)"| 10
    9 -->|"Chars(0)"| 10
    10 -->|"Charset([0-9])"| pop655360@{ shape: stop }
    10 -->|"Chars(0)"| pop655360@{ shape: stop }
    1 -->|"Prefix(*/)"| pop65536@{ shape: stop }
    2 -->|"Prefix(\\)"| push131075[/"string_escape"/]
    2 -->|"Prefix(&quot;)"| pop131072@{ shape: stop }
    3 -->|"Chars(1)"| pop196608@{ shape: stop }
**/
#[rustfmt::skip]
const LANG_JSON_CHARSET_0: &[u8; 256] = &[
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
#[rustfmt::skip]
pub const LANG_JSON: &Language = &Language {
    name: "JSON",
    extensions: &["json", "jsonc"],
    states: &[
        &[
            (Consume::Prefix(r#"//"#), HighlightKind::Comment, Action::Change(4)),
            (Consume::Prefix(r#"/*"#), HighlightKind::Comment, Action::Push(1)),
            (Consume::Prefix(r#"""#), HighlightKind::String, Action::Push(2)),
            (Consume::Prefix(r#"-"#), HighlightKind::Number, Action::Change(6)),
            (Consume::Charset(LANG_JSON_CHARSET_0), HighlightKind::Number, Action::Change(5)),
            (Consume::Prefix(r#"true"#), HighlightKind::Keyword, Action::Pop),
            (Consume::Prefix(r#"false"#), HighlightKind::Keyword, Action::Pop),
            (Consume::Prefix(r#"null"#), HighlightKind::Keyword, Action::Pop),
        ],
        &[
            (Consume::Prefix(r#"*/"#), HighlightKind::Comment, Action::Pop),
        ],
        &[
            (Consume::Prefix(r#"\"#), HighlightKind::String, Action::Push(3)),
            (Consume::Prefix(r#"""#), HighlightKind::String, Action::Pop),
        ],
        &[
            (Consume::Chars(1), HighlightKind::String, Action::Pop),
        ],
        &[
            (Consume::Chars(usize::MAX), HighlightKind::Comment, Action::Pop),
        ],
        &[
            (Consume::Prefix(r#"."#), HighlightKind::Number, Action::Change(8)),
            (Consume::Chars(0), HighlightKind::Number, Action::Change(7)),
        ],
        &[
            (Consume::Charset(LANG_JSON_CHARSET_0), HighlightKind::Number, Action::Change(5)),
            (Consume::Chars(0), HighlightKind::Other, Action::Pop),
        ],
        &[
            (Consume::PrefixInsensitive(r#"e"#), HighlightKind::Number, Action::Change(9)),
            (Consume::Chars(0), HighlightKind::Number, Action::Pop),
        ],
        &[
            (Consume::Charset(LANG_JSON_CHARSET_0), HighlightKind::Number, Action::Change(7)),
            (Consume::Chars(0), HighlightKind::Other, Action::Pop),
        ],
        &[
            (Consume::Prefix(r#"+"#), HighlightKind::Number, Action::Change(10)),
            (Consume::Prefix(r#"-"#), HighlightKind::Number, Action::Change(10)),
            (Consume::Chars(0), HighlightKind::Number, Action::Change(10)),
        ],
        &[
            (Consume::Charset(LANG_JSON_CHARSET_0), HighlightKind::Number, Action::Pop),
            (Consume::Chars(0), HighlightKind::Other, Action::Pop),
        ],
    ],
};

/**
---
config:
  layout: elk
---
flowchart TD
    0["ground"]
    1["string_double"]
    2["string_single"]
    3["string_escape"]
    4["string_resolve"]
    0 -->|"Prefix(#)"| 5
    0 -->|"Prefix(&quot;)"| push1[/"string_double"/]
    0 -->|"Prefix(')"| push2[/"string_single"/]
    0 -->|"Prefix(-)"| 7
    0 -->|"Charset([0-9])"| 6
    0 -->|"Prefix(true, false, null)"| push4[/"string_resolve"/]
    5 -->|"Chars(Line)"| pop327680@{ shape: stop }
    7 -->|"Charset([0-9])"| 6
    7 -->|"Chars(0)"| pop458752@{ shape: stop }
    6 -->|"Prefix(.)"| 9
    6 -->|"Chars(0)"| 8
    9 -->|"Charset([0-9])"| 8
    9 -->|"Chars(0)"| pop589824@{ shape: stop }
    8 -->|"PrefixInsensitive(e)"| 10
    8 -->|"Chars(0)"| push524292[/"string_resolve"/]
    10 -->|"Prefix(+, -)"| 11
    10 -->|"Chars(0)"| 11
    11 -->|"Charset([0-9])"| push720900[/"string_resolve"/]
    11 -->|"Chars(0)"| pop720896@{ shape: stop }
    1 -->|"Prefix(&quot;)"| pop65536@{ shape: stop }
    1 -->|"Prefix(\\)"| push65539[/"string_escape"/]
    2 -->|"Prefix(')"| pop131072@{ shape: stop }
    2 -->|"Prefix(\\)"| push131075[/"string_escape"/]
    3 -->|"Chars(1)"| pop196608@{ shape: stop }
    4 -->|"Charset([0x09-0x0D,  ])"| 12
    4 -->|"Chars(0)"| 12
    12 -->|"Charset([0x00-0x08, 0x0E-0x1F, !-0xFF])"| 13
    12 -->|"Chars(0)"| pop786432@{ shape: stop }
    13 -->|"Charset([0x00-&quot;, $-0xFF])"| pop851968@{ shape: stop }
    13 -->|"Chars(0)"| pop851968@{ shape: stop }
**/
#[rustfmt::skip]
const LANG_YAML_CHARSET_0: &[u8; 256] = &[
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
#[rustfmt::skip]
const LANG_YAML_CHARSET_1: &[u8; 256] = &[
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
#[rustfmt::skip]
const LANG_YAML_CHARSET_2: &[u8; 256] = &[
1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
#[rustfmt::skip]
const LANG_YAML_CHARSET_3: &[u8; 256] = &[
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
#[rustfmt::skip]
pub const LANG_YAML: &Language = &Language {
    name: "YAML",
    extensions: &["yaml", "yml"],
    states: &[
        &[
            (Consume::Prefix(r#"#"#), HighlightKind::Comment, Action::Change(5)),
            (Consume::Prefix(r#"""#), HighlightKind::String, Action::Push(1)),
            (Consume::Prefix(r#"'"#), HighlightKind::String, Action::Push(2)),
            (Consume::Prefix(r#"-"#), HighlightKind::Number, Action::Change(7)),
            (Consume::Charset(LANG_YAML_CHARSET_0), HighlightKind::Number, Action::Change(6)),
            (Consume::Prefix(r#"true"#), HighlightKind::Keyword, Action::Push(4)),
            (Consume::Prefix(r#"false"#), HighlightKind::Keyword, Action::Push(4)),
            (Consume::Prefix(r#"null"#), HighlightKind::Keyword, Action::Push(4)),
        ],
        &[
            (Consume::Prefix(r#"""#), HighlightKind::String, Action::Pop),
            (Consume::Prefix(r#"\"#), HighlightKind::String, Action::Push(3)),
        ],
        &[
            (Consume::Prefix(r#"'"#), HighlightKind::String, Action::Pop),
            (Consume::Prefix(r#"\"#), HighlightKind::String, Action::Push(3)),
        ],
        &[
            (Consume::Chars(1), HighlightKind::String, Action::Pop),
        ],
        &[
            (Consume::Charset(LANG_YAML_CHARSET_1), HighlightKind::String, Action::Change(12)),
            (Consume::Chars(0), HighlightKind::String, Action::Change(12)),
        ],
        &[
            (Consume::Chars(usize::MAX), HighlightKind::Comment, Action::Pop),
        ],
        &[
            (Consume::Prefix(r#"."#), HighlightKind::Number, Action::Change(9)),
            (Consume::Chars(0), HighlightKind::Number, Action::Change(8)),
        ],
        &[
            (Consume::Charset(LANG_YAML_CHARSET_0), HighlightKind::Number, Action::Change(6)),
            (Consume::Chars(0), HighlightKind::Other, Action::Pop),
        ],
        &[
            (Consume::PrefixInsensitive(r#"e"#), HighlightKind::Number, Action::Change(10)),
            (Consume::Chars(0), HighlightKind::Number, Action::Push(4)),
        ],
        &[
            (Consume::Charset(LANG_YAML_CHARSET_0), HighlightKind::Number, Action::Change(8)),
            (Consume::Chars(0), HighlightKind::Other, Action::Pop),
        ],
        &[
            (Consume::Prefix(r#"+"#), HighlightKind::Number, Action::Change(11)),
            (Consume::Prefix(r#"-"#), HighlightKind::Number, Action::Change(11)),
            (Consume::Chars(0), HighlightKind::Number, Action::Change(11)),
        ],
        &[
            (Consume::Charset(LANG_YAML_CHARSET_0), HighlightKind::Number, Action::Push(4)),
            (Consume::Chars(0), HighlightKind::Other, Action::Pop),
        ],
        &[
            (Consume::Charset(LANG_YAML_CHARSET_2), HighlightKind::String, Action::Change(13)),
            (Consume::Chars(0), HighlightKind::Other, Action::Pop),
        ],
        &[
            (Consume::Charset(LANG_YAML_CHARSET_3), HighlightKind::String, Action::Pop),
            (Consume::Chars(0), HighlightKind::Other, Action::Pop),
        ],
    ],
};

/**
---
config:
  layout: elk
---
flowchart TD
    0["ground"]
    1["string_single"]
    2["string_double"]
    3["string_escape"]
    4["variable"]
    0 -->|"Prefix(#)"| 5
    0 -->|"Prefix(')"| push1[/"string_single"/]
    0 -->|"Prefix(&quot;)"| push2[/"string_double"/]
    0 -->|"Prefix($)"| push4[/"variable"/]
    0 -->|"Prefix(!, %, *, +, /, <, =, >, |)"| pop0@{ shape: stop }
    0 -->|"PrefixInsensitive(break, case, continue, done, do, elif, else, esac, fi, for, function, if, in, return, select, then, until, while)"| pop0@{ shape: stop }
    0 -->|"Charset([0-9])"| pop0@{ shape: stop }
    0 -->|"Charset([0-9, A-Z, _, a-z, 0x80-0xFF])"| pop0@{ shape: stop }
    5 -->|"Chars(Line)"| pop327680@{ shape: stop }
    1 -->|"Prefix(')"| pop65536@{ shape: stop }
    1 -->|"Prefix(\\)"| push65539[/"string_escape"/]
    2 -->|"Prefix(&quot;)"| pop131072@{ shape: stop }
    2 -->|"Prefix(\\)"| push131075[/"string_escape"/]
    2 -->|"Prefix($)"| push131076[/"variable"/]
    3 -->|"Chars(1)"| pop196608@{ shape: stop }
    4 -->|"Prefix(#, ?)"| pop262144@{ shape: stop }
    4 -->|"Prefix({)"| 6
    4 -->|"Charset([0-9, A-Z, _, a-z, 0x80-0xFF])"| pop262144@{ shape: stop }
    6 -->|"Charset([0x00-|, ~-0xFF])"| 7
    6 -->|"Chars(0)"| 7
    7 -->|"Prefix(})"| pop458752@{ shape: stop }
    7 -->|"Chars(0)"| pop458752@{ shape: stop }
**/
#[rustfmt::skip]
const LANG_BASH_CHARSET_0: &[u8; 256] = &[
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
#[rustfmt::skip]
const LANG_BASH_CHARSET_1: &[u8; 256] = &[
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
#[rustfmt::skip]
const LANG_BASH_CHARSET_2: &[u8; 256] = &[
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
#[rustfmt::skip]
pub const LANG_BASH: &Language = &Language {
    name: "Bash",
    extensions: &["sh", "zsh"],
    states: &[
        &[
            (Consume::Prefix(r#"#"#), HighlightKind::Comment, Action::Change(5)),
            (Consume::Prefix(r#"'"#), HighlightKind::String, Action::Push(1)),
            (Consume::Prefix(r#"""#), HighlightKind::String, Action::Push(2)),
            (Consume::Prefix(r#"$"#), HighlightKind::Variable, Action::Push(4)),
            (Consume::Prefix(r#"!"#), HighlightKind::Operator, Action::Pop),
            (Consume::Prefix(r#"%"#), HighlightKind::Operator, Action::Pop),
            (Consume::Prefix(r#"*"#), HighlightKind::Operator, Action::Pop),
            (Consume::Prefix(r#"+"#), HighlightKind::Operator, Action::Pop),
            (Consume::Prefix(r#"/"#), HighlightKind::Operator, Action::Pop),
            (Consume::Prefix(r#"<"#), HighlightKind::Operator, Action::Pop),
            (Consume::Prefix(r#"="#), HighlightKind::Operator, Action::Pop),
            (Consume::Prefix(r#">"#), HighlightKind::Operator, Action::Pop),
            (Consume::Prefix(r#"|"#), HighlightKind::Operator, Action::Pop),
            (Consume::PrefixInsensitive(r#"break"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"case"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"continue"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"done"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"do"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"elif"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"else"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"esac"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"fi"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"for"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"function"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"if"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"in"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"return"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"select"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"then"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"until"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"while"#), HighlightKind::Keyword, Action::Pop),
            (Consume::Charset(LANG_BASH_CHARSET_0), HighlightKind::Number, Action::Pop),
            (Consume::Charset(LANG_BASH_CHARSET_1), HighlightKind::Method, Action::Pop),
        ],
        &[
            (Consume::Prefix(r#"'"#), HighlightKind::String, Action::Pop),
            (Consume::Prefix(r#"\"#), HighlightKind::String, Action::Push(3)),
        ],
        &[
            (Consume::Prefix(r#"""#), HighlightKind::String, Action::Pop),
            (Consume::Prefix(r#"\"#), HighlightKind::String, Action::Push(3)),
            (Consume::Prefix(r#"$"#), HighlightKind::Other, Action::Push(4)),
        ],
        &[
            (Consume::Chars(1), HighlightKind::String, Action::Pop),
        ],
        &[
            (Consume::Prefix(r#"#"#), HighlightKind::Variable, Action::Pop),
            (Consume::Prefix(r#"?"#), HighlightKind::Variable, Action::Pop),
            (Consume::Prefix(r#"{"#), HighlightKind::Variable, Action::Change(6)),
            (Consume::Charset(LANG_BASH_CHARSET_1), HighlightKind::Variable, Action::Pop),
        ],
        &[
            (Consume::Chars(usize::MAX), HighlightKind::Comment, Action::Pop),
        ],
        &[
            (Consume::Charset(LANG_BASH_CHARSET_2), HighlightKind::Variable, Action::Change(7)),
            (Consume::Chars(0), HighlightKind::Variable, Action::Change(7)),
        ],
        &[
            (Consume::Prefix(r#"}"#), HighlightKind::Variable, Action::Pop),
            (Consume::Chars(0), HighlightKind::Other, Action::Pop),
        ],
    ],
};

/**
---
config:
  layout: elk
---
flowchart TD
    0["ground"]
    1["comment"]
    2["string_single"]
    3["string_double"]
    4["string_escape"]
    5["variable"]
    0 -->|"Prefix(#)"| 6
    0 -->|"Prefix(<#)"| push1[/"comment"/]
    0 -->|"Prefix(')"| push2[/"string_single"/]
    0 -->|"Prefix(&quot;)"| push3[/"string_double"/]
    0 -->|"Prefix($)"| push5[/"variable"/]
    0 -->|"Prefix(-)"| 8
    0 -->|"Charset([0-9])"| 7
    0 -->|"Prefix(!, %, *, +, /, <, =, >, |)"| pop0@{ shape: stop }
    0 -->|"PrefixInsensitive(break, catch, continue, do, else, finally, foreach, function, if, return, switch, throw, try, using, while)"| pop0@{ shape: stop }
    0 -->|"Charset([-, 0-9, A-Z, _, a-z, 0x80-0xFF])"| pop0@{ shape: stop }
    6 -->|"Chars(Line)"| pop393216@{ shape: stop }
    8 -->|"Charset([0-9])"| 7
    8 -->|"Charset([0-9, A-Z, _, a-z, 0x80-0xFF])"| pop524288@{ shape: stop }
    8 -->|"Chars(0)"| pop524288@{ shape: stop }
    7 -->|"Prefix(.)"| 10
    7 -->|"Chars(0)"| 9
    10 -->|"Charset([0-9])"| 9
    10 -->|"Chars(0)"| pop655360@{ shape: stop }
    9 -->|"PrefixInsensitive(e)"| 11
    9 -->|"Chars(0)"| pop589824@{ shape: stop }
    11 -->|"Prefix(+, -)"| 12
    11 -->|"Chars(0)"| 12
    12 -->|"Charset([0-9])"| pop786432@{ shape: stop }
    12 -->|"Chars(0)"| pop786432@{ shape: stop }
    1 -->|"Prefix(#>)"| pop65536@{ shape: stop }
    2 -->|"Prefix(')"| pop131072@{ shape: stop }
    2 -->|"Prefix(`)"| push131076[/"string_escape"/]
    3 -->|"Prefix(&quot;)"| pop196608@{ shape: stop }
    3 -->|"Prefix(`)"| push196612[/"string_escape"/]
    3 -->|"Prefix($)"| push196613[/"variable"/]
    4 -->|"Chars(1)"| pop262144@{ shape: stop }
    5 -->|"Prefix((, $, ?, ^)"| pop327680@{ shape: stop }
    5 -->|"Prefix({)"| 14
    5 -->|"Charset([0-9, A-Z, _, a-z, 0x80-0xFF])"| pop327680@{ shape: stop }
    14 -->|"Charset([0x00-|, ~-0xFF])"| 15
    14 -->|"Chars(0)"| 15
    15 -->|"Prefix(})"| pop983040@{ shape: stop }
    15 -->|"Chars(0)"| pop983040@{ shape: stop }
**/
#[rustfmt::skip]
const LANG_POWERSHELL_CHARSET_0: &[u8; 256] = &[
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
#[rustfmt::skip]
const LANG_POWERSHELL_CHARSET_1: &[u8; 256] = &[
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
#[rustfmt::skip]
const LANG_POWERSHELL_CHARSET_2: &[u8; 256] = &[
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
#[rustfmt::skip]
const LANG_POWERSHELL_CHARSET_3: &[u8; 256] = &[
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
#[rustfmt::skip]
pub const LANG_POWERSHELL: &Language = &Language {
    name: "PowerShell",
    extensions: &["ps1", "psm1", "psd1"],
    states: &[
        &[
            (Consume::Prefix(r#"#"#), HighlightKind::Comment, Action::Change(6)),
            (Consume::Prefix(r#"<#"#), HighlightKind::Comment, Action::Push(1)),
            (Consume::Prefix(r#"'"#), HighlightKind::String, Action::Push(2)),
            (Consume::Prefix(r#"""#), HighlightKind::String, Action::Push(3)),
            (Consume::Prefix(r#"$"#), HighlightKind::Variable, Action::Push(5)),
            (Consume::Prefix(r#"-"#), HighlightKind::Number, Action::Change(8)),
            (Consume::Charset(LANG_POWERSHELL_CHARSET_0), HighlightKind::Number, Action::Change(7)),
            (Consume::Prefix(r#"!"#), HighlightKind::Operator, Action::Pop),
            (Consume::Prefix(r#"%"#), HighlightKind::Operator, Action::Pop),
            (Consume::Prefix(r#"*"#), HighlightKind::Operator, Action::Pop),
            (Consume::Prefix(r#"+"#), HighlightKind::Operator, Action::Pop),
            (Consume::Prefix(r#"/"#), HighlightKind::Operator, Action::Pop),
            (Consume::Prefix(r#"<"#), HighlightKind::Operator, Action::Pop),
            (Consume::Prefix(r#"="#), HighlightKind::Operator, Action::Pop),
            (Consume::Prefix(r#">"#), HighlightKind::Operator, Action::Pop),
            (Consume::Prefix(r#"|"#), HighlightKind::Operator, Action::Pop),
            (Consume::PrefixInsensitive(r#"break"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"catch"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"continue"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"do"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"else"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"finally"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"foreach"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"function"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"if"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"return"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"switch"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"throw"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"try"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"using"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"while"#), HighlightKind::Keyword, Action::Pop),
            (Consume::Charset(LANG_POWERSHELL_CHARSET_2), HighlightKind::Method, Action::Pop),
        ],
        &[
            (Consume::Prefix(r#"#>"#), HighlightKind::Comment, Action::Pop),
        ],
        &[
            (Consume::Prefix(r#"'"#), HighlightKind::String, Action::Pop),
            (Consume::Prefix(r#"`"#), HighlightKind::String, Action::Push(4)),
        ],
        &[
            (Consume::Prefix(r#"""#), HighlightKind::String, Action::Pop),
            (Consume::Prefix(r#"`"#), HighlightKind::String, Action::Push(4)),
            (Consume::Prefix(r#"$"#), HighlightKind::Other, Action::Push(5)),
        ],
        &[
            (Consume::Chars(1), HighlightKind::String, Action::Pop),
        ],
        &[
            (Consume::Prefix(r#"("#), HighlightKind::Other, Action::Pop),
            (Consume::Prefix(r#"$"#), HighlightKind::Variable, Action::Pop),
            (Consume::Prefix(r#"?"#), HighlightKind::Variable, Action::Pop),
            (Consume::Prefix(r#"^"#), HighlightKind::Variable, Action::Pop),
            (Consume::Prefix(r#"{"#), HighlightKind::Variable, Action::Change(14)),
            (Consume::Charset(LANG_POWERSHELL_CHARSET_1), HighlightKind::Variable, Action::Pop),
        ],
        &[
            (Consume::Chars(usize::MAX), HighlightKind::Comment, Action::Pop),
        ],
        &[
            (Consume::Prefix(r#"."#), HighlightKind::Number, Action::Change(10)),
            (Consume::Chars(0), HighlightKind::Number, Action::Change(9)),
        ],
        &[
            (Consume::Charset(LANG_POWERSHELL_CHARSET_0), HighlightKind::Number, Action::Change(7)),
            (Consume::Charset(LANG_POWERSHELL_CHARSET_1), HighlightKind::Operator, Action::Pop),
            (Consume::Chars(0), HighlightKind::Other, Action::Pop),
        ],
        &[
            (Consume::PrefixInsensitive(r#"e"#), HighlightKind::Number, Action::Change(11)),
            (Consume::Chars(0), HighlightKind::Number, Action::Pop),
        ],
        &[
            (Consume::Charset(LANG_POWERSHELL_CHARSET_0), HighlightKind::Number, Action::Change(9)),
            (Consume::Chars(0), HighlightKind::Other, Action::Pop),
        ],
        &[
            (Consume::Prefix(r#"+"#), HighlightKind::Number, Action::Change(12)),
            (Consume::Prefix(r#"-"#), HighlightKind::Number, Action::Change(12)),
            (Consume::Chars(0), HighlightKind::Number, Action::Change(12)),
        ],
        &[
            (Consume::Charset(LANG_POWERSHELL_CHARSET_0), HighlightKind::Number, Action::Pop),
            (Consume::Chars(0), HighlightKind::Other, Action::Pop),
        ],
        &[
        ],
        &[
            (Consume::Charset(LANG_POWERSHELL_CHARSET_3), HighlightKind::Variable, Action::Change(15)),
            (Consume::Chars(0), HighlightKind::Variable, Action::Change(15)),
        ],
        &[
            (Consume::Prefix(r#"}"#), HighlightKind::Variable, Action::Pop),
            (Consume::Chars(0), HighlightKind::Other, Action::Pop),
        ],
    ],
};

/**
---
config:
  layout: elk
---
flowchart TD
    0["ground"]
    1["string"]
    2["string_escape"]
    0 -->|"Prefix(:: , ::	)"| 3
    0 -->|"PrefixInsensitive(rem)"| 4
    0 -->|"Prefix(&quot;)"| push1[/"string"/]
    0 -->|"Prefix(!, %, *, +, /, <, =, >, |)"| pop0@{ shape: stop }
    0 -->|"PrefixInsensitive(break, call, cd, chdir, cls, copy, del, dir, echo, exit, for, goto, if, md, mkdir, move, pause, ren, set)"| pop0@{ shape: stop }
    0 -->|"Charset([0-9])"| pop0@{ shape: stop }
    0 -->|"Charset([0-9, A-Z, _, a-z, 0x80-0xFF])"| pop0@{ shape: stop }
    3 -->|"Chars(Line)"| pop196608@{ shape: stop }
    4 -->|"Prefix(	,  )"| 5
    4 -->|"Chars(0)"| pop262144@{ shape: stop }
    5 -->|"Chars(Line)"| pop327680@{ shape: stop }
    1 -->|"Prefix(&quot;)"| pop65536@{ shape: stop }
    1 -->|"Prefix(\\)"| push65538[/"string_escape"/]
    2 -->|"Chars(1)"| pop131072@{ shape: stop }
**/
#[rustfmt::skip]
const LANG_BATCH_CHARSET_0: &[u8; 256] = &[
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
#[rustfmt::skip]
const LANG_BATCH_CHARSET_1: &[u8; 256] = &[
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
#[rustfmt::skip]
pub const LANG_BATCH: &Language = &Language {
    name: "Batch",
    extensions: &["bat", "cmd"],
    states: &[
        &[
            (Consume::Prefix(r#":: "#), HighlightKind::Comment, Action::Change(3)),
            (Consume::Prefix(r#"::	"#), HighlightKind::Comment, Action::Change(3)),
            (Consume::PrefixInsensitive(r#"rem"#), HighlightKind::Comment, Action::Change(4)),
            (Consume::Prefix(r#"""#), HighlightKind::String, Action::Push(1)),
            (Consume::Prefix(r#"!"#), HighlightKind::Operator, Action::Pop),
            (Consume::Prefix(r#"%"#), HighlightKind::Operator, Action::Pop),
            (Consume::Prefix(r#"*"#), HighlightKind::Operator, Action::Pop),
            (Consume::Prefix(r#"+"#), HighlightKind::Operator, Action::Pop),
            (Consume::Prefix(r#"/"#), HighlightKind::Operator, Action::Pop),
            (Consume::Prefix(r#"<"#), HighlightKind::Operator, Action::Pop),
            (Consume::Prefix(r#"="#), HighlightKind::Operator, Action::Pop),
            (Consume::Prefix(r#">"#), HighlightKind::Operator, Action::Pop),
            (Consume::Prefix(r#"|"#), HighlightKind::Operator, Action::Pop),
            (Consume::PrefixInsensitive(r#"break"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"call"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"cd"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"chdir"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"cls"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"copy"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"del"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"dir"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"echo"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"exit"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"for"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"goto"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"if"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"md"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"mkdir"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"move"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"pause"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"ren"#), HighlightKind::Keyword, Action::Pop),
            (Consume::PrefixInsensitive(r#"set"#), HighlightKind::Keyword, Action::Pop),
            (Consume::Charset(LANG_BATCH_CHARSET_0), HighlightKind::Number, Action::Pop),
            (Consume::Charset(LANG_BATCH_CHARSET_1), HighlightKind::Method, Action::Pop),
        ],
        &[
            (Consume::Prefix(r#"""#), HighlightKind::String, Action::Pop),
            (Consume::Prefix(r#"\"#), HighlightKind::String, Action::Push(2)),
        ],
        &[
            (Consume::Chars(1), HighlightKind::String, Action::Pop),
        ],
        &[
            (Consume::Chars(usize::MAX), HighlightKind::Comment, Action::Pop),
        ],
        &[
            (Consume::Prefix(r#"	"#), HighlightKind::Comment, Action::Change(5)),
            (Consume::Prefix(r#" "#), HighlightKind::Comment, Action::Change(5)),
            (Consume::Chars(0), HighlightKind::Other, Action::Pop),
        ],
        &[
            (Consume::Chars(usize::MAX), HighlightKind::Comment, Action::Pop),
        ],
    ],
};

#[rustfmt::skip]
pub const LANGUAGES: &[&Language] = &[
    LANG_JSON,
    LANG_YAML,
    LANG_BASH,
    LANG_POWERSHELL,
    LANG_BATCH,
];
